/*
 * Keytiles Hit Collection API
 * API to collect hits received by the tracked website    This endpoint can be used as an integration point if you want to send in hits generated by your native iOS/Android/etc applications.      If you are planning to integrate your app traffic please visit the Keytiles website Developer area and learn more!      check [https://keytiles.com/developer-area/sending-in-traffic-from-ios-android-etc-apps](https://keytiles.com/developer-area/sending-in-traffic-from-ios-android-etc-apps) 
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.keytiles.api.model.hitcollection.v2;

import java.util.Objects;
import java.util.Arrays;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.keytiles.api.model.hitcollection.v2.CampaignData;
import com.keytiles.api.model.hitcollection.v2.HitClass;
import com.keytiles.api.model.hitcollection.v2.VisitorEnvironment;

import java.io.Serializable;

public class WebhitClass extends HitClass implements Serializable{
  private static final long serialVersionUID = 1L;


  // @Generator: becomes private - as non-nullable so we need to protect it with setter and null-check 
  private String eventType = null;

  // @Generator: becomes private - as non-nullable so we need to protect it with setter and null-check 
  private String action = null;

  // @Generator: becomes private - as non-nullable so we need to protect it with setter and null-check 
  private String userAgentType = null;


  // @Generator: becomes public - as nullable (no need to null-check) and not readonly 
  @JsonProperty("eventParams")
  public String eventParams = null;

  // @Generator: becomes public - as nullable (no need to null-check) and not readonly 
  @JsonProperty("visitorType")
  public String visitorType = null;

  // @Generator: becomes public - as nullable (no need to null-check) and not readonly 
  @JsonProperty("tileType")
  public String tileType = null;

  // @Generator: becomes public - as nullable (no need to null-check) and not readonly 
  @JsonProperty("tileLanguage")
  public String tileLanguage = null;

  // @Generator: becomes public - as nullable (no need to null-check) and not readonly 
  @JsonProperty("tileUrl")
  public String tileUrl = null;

  // @Generator: becomes public - as nullable (no need to null-check) and not readonly 
  @JsonProperty("uniqueWebClientId")
  public String uniqueWebClientId = null;

  // @Generator: becomes public - as nullable (no need to null-check) and not readonly 
  @JsonProperty("pseudoUniqueWebClientId")
  public String pseudoUniqueWebClientId = null;

  // @Generator: becomes public - as nullable (no need to null-check) and not readonly 
  @JsonProperty("primaryTags")
  public String primaryTags = null;

  // @Generator: becomes public - as nullable (no need to null-check) and not readonly 
  @JsonProperty("secondaryTags")
  public String secondaryTags = null;

  // @Generator: becomes public - as nullable (no need to null-check) and not readonly 
  @JsonProperty("referrerUrl")
  public String referrerUrl = null;

  // @Generator: becomes public - as nullable (no need to null-check) and not readonly 
  @JsonProperty("referrerTileId")
  public String referrerTileId = null;

  // @Generator: field refers to 'VisitorEnvironment' which is 'nullable=true' so this is inherited into this field 
  // @Generator: becomes public - as nullable (no need to null-check) and not readonly 
  @JsonProperty("visitorEnvironment")
  public VisitorEnvironment visitorEnvironment = null;

  // @Generator: field refers to 'CampaignData' which is 'nullable=true' so this is inherited into this field 
  // @Generator: becomes public - as nullable (no need to null-check) and not readonly 
  @JsonProperty("campaignData")
  public CampaignData campaignData = null;

  
  @JsonCreator
  public WebhitClass(@JsonProperty("containerId") String containerId, @JsonProperty("method") MethodEnum method, @JsonProperty("value") Integer value, @JsonProperty("tileId") String tileId, @JsonProperty("tileTitle") String tileTitle, @JsonProperty("eventType") String eventType, @JsonProperty("action") String action, @JsonProperty("userAgentType") String userAgentType) {
    super(containerId, method, value, tileId, tileTitle);
    if(eventType == null) {
      throw new IllegalArgumentException("'eventType' value can not be NULL");
    }
    if(action == null) {
      throw new IllegalArgumentException("'action' value can not be NULL");
    }
    if(userAgentType == null) {
      throw new IllegalArgumentException("'userAgentType' value can not be NULL");
    }
    this.eventType = eventType;
    this.action = action;
    this.userAgentType = userAgentType;
  }
  
  
 
  @JsonProperty("eventType")
  public String getEventType() {
    return eventType;
  }  

  // @Generator: added to protect field 'eventType' against null-value assignment 
  @JsonProperty("eventType")
  public void setEventType(String eventType) {
    if(eventType == null) {
      throw new IllegalArgumentException("'eventType' value can not be NULL");
    }
    this.eventType = eventType;
  }

  @JsonProperty("action")
  public String getAction() {
    return action;
  }  

  // @Generator: added to protect field 'action' against null-value assignment 
  @JsonProperty("action")
  public void setAction(String action) {
    if(action == null) {
      throw new IllegalArgumentException("'action' value can not be NULL");
    }
    this.action = action;
  }

  @JsonProperty("userAgentType")
  public String getUserAgentType() {
    return userAgentType;
  }  

  // @Generator: added to protect field 'userAgentType' against null-value assignment 
  @JsonProperty("userAgentType")
  public void setUserAgentType(String userAgentType) {
    if(userAgentType == null) {
      throw new IllegalArgumentException("'userAgentType' value can not be NULL");
    }
    this.userAgentType = userAgentType;
  }



  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebhitClass webhitClass = (WebhitClass) o;
    return Objects.equals(this.eventType, webhitClass.eventType) &&
        Objects.equals(this.action, webhitClass.action) &&
        Objects.equals(this.eventParams, webhitClass.eventParams) &&
        Objects.equals(this.visitorType, webhitClass.visitorType) &&
        Objects.equals(this.tileType, webhitClass.tileType) &&
        Objects.equals(this.tileLanguage, webhitClass.tileLanguage) &&
        Objects.equals(this.tileUrl, webhitClass.tileUrl) &&
        Objects.equals(this.uniqueWebClientId, webhitClass.uniqueWebClientId) &&
        Objects.equals(this.pseudoUniqueWebClientId, webhitClass.pseudoUniqueWebClientId) &&
        Objects.equals(this.userAgentType, webhitClass.userAgentType) &&
        Objects.equals(this.primaryTags, webhitClass.primaryTags) &&
        Objects.equals(this.secondaryTags, webhitClass.secondaryTags) &&
        Objects.equals(this.referrerUrl, webhitClass.referrerUrl) &&
        Objects.equals(this.referrerTileId, webhitClass.referrerTileId) &&
        Objects.equals(this.visitorEnvironment, webhitClass.visitorEnvironment) &&
        Objects.equals(this.campaignData, webhitClass.campaignData) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eventType, action, eventParams, visitorType, tileType, tileLanguage, tileUrl, uniqueWebClientId, pseudoUniqueWebClientId, userAgentType, primaryTags, secondaryTags, referrerUrl, referrerTileId, visitorEnvironment, campaignData, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebhitClass {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    eventParams: ").append(toIndentedString(eventParams)).append("\n");
    sb.append("    visitorType: ").append(toIndentedString(visitorType)).append("\n");
    sb.append("    tileType: ").append(toIndentedString(tileType)).append("\n");
    sb.append("    tileLanguage: ").append(toIndentedString(tileLanguage)).append("\n");
    sb.append("    tileUrl: ").append(toIndentedString(tileUrl)).append("\n");
    sb.append("    uniqueWebClientId: ").append(toIndentedString(uniqueWebClientId)).append("\n");
    sb.append("    pseudoUniqueWebClientId: ").append(toIndentedString(pseudoUniqueWebClientId)).append("\n");
    sb.append("    userAgentType: ").append(toIndentedString(userAgentType)).append("\n");
    sb.append("    primaryTags: ").append(toIndentedString(primaryTags)).append("\n");
    sb.append("    secondaryTags: ").append(toIndentedString(secondaryTags)).append("\n");
    sb.append("    referrerUrl: ").append(toIndentedString(referrerUrl)).append("\n");
    sb.append("    referrerTileId: ").append(toIndentedString(referrerTileId)).append("\n");
    sb.append("    visitorEnvironment: ").append(toIndentedString(visitorEnvironment)).append("\n");
    sb.append("    campaignData: ").append(toIndentedString(campaignData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
