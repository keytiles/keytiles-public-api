/*
 * Common object definitions
 * These object definitions are shared among multiple contracts
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.keytiles.api.model.common.types.v3;

import java.util.Objects;
import java.util.Arrays;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.keytiles.api.model.common.types.v3.ProblemV3Class;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import java.io.Serializable;

public class BaseResponseV3Class implements Serializable{
  private static final long serialVersionUID = 1L;


  // @Generator: becomes private - as non-nullable so we need to protect it with setter and null-check 
  private Integer requestReceivedAt = null;


  // @Generator: becomes public - as nullable (no need to null-check) and not readonly 
  @JsonProperty("processingTookMillis")
  public Integer processingTookMillis = null;

  // @Generator: becomes public - as nullable (no need to null-check) and not readonly 
  @JsonProperty("problems")
  public List<ProblemV3Class> problems = new ArrayList<>();

  // @Generator: this map does not have default and nullable - so let's keep it on NULL then 
  // @Generator: becomes public - as nullable (no need to null-check) and not readonly 
  @JsonProperty("vars")
  public Map<String, Object> vars = null;

  
  // @Generator: arg 'requestReceivedAt': mandatory field 
  @JsonCreator
  public BaseResponseV3Class(@JsonProperty("requestReceivedAt") Integer requestReceivedAt) {
    super();
    if(requestReceivedAt == null) {
      throw new IllegalArgumentException("'requestReceivedAt' value can not be NULL");
    }
    this.requestReceivedAt = requestReceivedAt;
  }
  
  
 
  @JsonProperty("requestReceivedAt")
  public Integer getRequestReceivedAt() {
    return requestReceivedAt;
  }  

  // @Generator: added to protect field 'requestReceivedAt' against null-value assignment 
  @JsonProperty("requestReceivedAt")
  public void setRequestReceivedAt(Integer requestReceivedAt) {
    if(requestReceivedAt == null) {
      throw new IllegalArgumentException("'requestReceivedAt' value can not be NULL");
    }
    this.requestReceivedAt = requestReceivedAt;
  }



  // @Generator: builder style helper method to add values to not-readonly array field
  public BaseResponseV3Class addProblemsItem(ProblemV3Class problemsItem) {
    if (this.problems == null) {
 		this.problems = new ArrayList<>();
    }
    this.problems.add(problemsItem);
    return this;
  }

  // @Generator: builder style helper method to remove values from not-readonly array field
  public BaseResponseV3Class removeProblemsItem(ProblemV3Class problemsItem) {
    if (this.problems != null) {
    	this.problems.remove(problemsItem);
    }
    return this;
  }

  // @Generator: builder style helper method to put values into not-readonly map field
  public BaseResponseV3Class putVarsItem(String key, Object varsItem) {
    if (this.vars == null) {
		this.vars = new HashMap<>();
    }
    this.vars.put(key, varsItem);
    return this;
  }

  // @Generator: builder style helper method to remove values from not-readonly map field
  public BaseResponseV3Class removeVarsItem(String key) {
    if (this.vars != null) {
    	this.vars.remove(key);
    }
    return this;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BaseResponseV3Class baseResponseV3Class = (BaseResponseV3Class) o;
    return Objects.equals(this.requestReceivedAt, baseResponseV3Class.requestReceivedAt) &&
        Objects.equals(this.processingTookMillis, baseResponseV3Class.processingTookMillis) &&
        Objects.equals(this.problems, baseResponseV3Class.problems) &&
        Objects.equals(this.vars, baseResponseV3Class.vars);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestReceivedAt, processingTookMillis, problems, vars);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BaseResponseV3Class {\n");
    
    sb.append("    requestReceivedAt: ").append(toIndentedString(requestReceivedAt)).append("\n");
    sb.append("    processingTookMillis: ").append(toIndentedString(processingTookMillis)).append("\n");
    sb.append("    problems: ").append(toIndentedString(problems)).append("\n");
    sb.append("    vars: ").append(toIndentedString(vars)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
