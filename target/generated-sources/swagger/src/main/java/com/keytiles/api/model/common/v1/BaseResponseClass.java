/*
 * Common object definitions
 * These object definitions are shared among multiple contracts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.keytiles.api.model.common.v1;

import java.util.Objects;
import java.util.Arrays;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.List;

import java.io.Serializable;

public class BaseResponseClass implements Serializable{
  private static final long serialVersionUID = 1L;


  private Integer requestReceivedAt = null;

  private Integer processingTookMillis = null;

  private List<String> messages = new ArrayList<>();


  
  @JsonCreator
  public BaseResponseClass(@JsonProperty("requestReceivedAt") Integer requestReceivedAt, @JsonProperty("processingTookMillis") Integer processingTookMillis) {
    super();
    if(requestReceivedAt == null) {
      throw new IllegalArgumentException("'requestReceivedAt' value can not be NULL");
    }
    if(processingTookMillis == null) {
      throw new IllegalArgumentException("'processingTookMillis' value can not be NULL");
    }
    this.requestReceivedAt = requestReceivedAt;
    this.processingTookMillis = processingTookMillis;
  }
  
  
 
  @JsonProperty("requestReceivedAt")
  public Integer getRequestReceivedAt() {
    return requestReceivedAt;
  }  

  @JsonProperty("requestReceivedAt")
  public void setRequestReceivedAt(Integer requestReceivedAt) {
    if(requestReceivedAt == null) {
      throw new IllegalArgumentException("'requestReceivedAt' value can not be NULL");
    }
    this.requestReceivedAt = requestReceivedAt;
  }

  @JsonProperty("processingTookMillis")
  public Integer getProcessingTookMillis() {
    return processingTookMillis;
  }  

  @JsonProperty("processingTookMillis")
  public void setProcessingTookMillis(Integer processingTookMillis) {
    if(processingTookMillis == null) {
      throw new IllegalArgumentException("'processingTookMillis' value can not be NULL");
    }
    this.processingTookMillis = processingTookMillis;
  }

  @JsonProperty("messages")
  public List<String> getMessages() {
    return messages;
  }  

  @JsonProperty("messages")
  public void setMessages(List<String> messages) {
    if(messages == null) {
      throw new IllegalArgumentException("'messages' value can not be NULL");
    }
    this.messages = messages;
  }



  // @Generator: builder style helper method to add values to not-readonly array field
  public BaseResponseClass addMessagesItem(String messagesItem) {
    if (this.messages == null) {
 		this.messages = new ArrayList<>();
    }
    this.messages.add(messagesItem);
    return this;
  }

  // @Generator: builder style helper method to remove values from not-readonly array field
  public BaseResponseClass removeMessagesItem(String messagesItem) {
    if (this.messages != null) {
    	this.messages.remove(messagesItem);
    }
    return this;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BaseResponseClass baseResponseClass = (BaseResponseClass) o;
    return Objects.equals(this.requestReceivedAt, baseResponseClass.requestReceivedAt) &&
        Objects.equals(this.processingTookMillis, baseResponseClass.processingTookMillis) &&
        Objects.equals(this.messages, baseResponseClass.messages);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestReceivedAt, processingTookMillis, messages);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BaseResponseClass {\n");
    
    sb.append("    requestReceivedAt: ").append(toIndentedString(requestReceivedAt)).append("\n");
    sb.append("    processingTookMillis: ").append(toIndentedString(processingTookMillis)).append("\n");
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
