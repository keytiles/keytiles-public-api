/*
 * Common object definitions
 * These object definitions are shared among multiple contracts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.keytiles.api.model.common.types.v1;

import java.util.Objects;
import java.util.Arrays;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

import java.io.Serializable;

public class MessageResponseClass implements Serializable{
  private static final long serialVersionUID = 1L;


  // @Generator: becomes private - as non-nullable so we need to protect it with setter and null-check 
  /**
   * Textual description of the status
   *
   */
  public enum StatusEnum {
    OK("ok"),
    FAILED("failed"),
    WARNING("warning");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static StatusEnum fromValue(String input) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  private StatusEnum status = null;

  // @Generator: becomes private - as non-nullable so we need to protect it with setter and null-check 
  private String message = null;


  
  @JsonCreator
  public MessageResponseClass(@JsonProperty("status") StatusEnum status, @JsonProperty("message") String message) {
    super();
    if(status == null) {
      throw new IllegalArgumentException("'status' value can not be NULL");
    }
    if(message == null) {
      throw new IllegalArgumentException("'message' value can not be NULL");
    }
    this.status = status;
    this.message = message;
  }
  
  
 
  @JsonProperty("status")
  public StatusEnum getStatus() {
    return status;
  }  

  // @Generator: added to protect field 'status' against null-value assignment 
  @JsonProperty("status")
  public void setStatus(StatusEnum status) {
    if(status == null) {
      throw new IllegalArgumentException("'status' value can not be NULL");
    }
    this.status = status;
  }

  @JsonProperty("message")
  public String getMessage() {
    return message;
  }  

  // @Generator: added to protect field 'message' against null-value assignment 
  @JsonProperty("message")
  public void setMessage(String message) {
    if(message == null) {
      throw new IllegalArgumentException("'message' value can not be NULL");
    }
    this.message = message;
  }



  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MessageResponseClass messageResponseClass = (MessageResponseClass) o;
    return Objects.equals(this.status, messageResponseClass.status) &&
        Objects.equals(this.message, messageResponseClass.message);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, message);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MessageResponseClass {\n");
    
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
