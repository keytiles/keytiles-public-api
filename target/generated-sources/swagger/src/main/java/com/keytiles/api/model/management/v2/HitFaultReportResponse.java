/*
 * Keytiles Management API
 * API to manage users, permissions, containers, etc.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.keytiles.api.model.management.v2;

import java.util.Objects;
import java.util.Arrays;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.keytiles.api.model.common.types.v3.ContainerQueryRangeResponseClass;
import com.keytiles.api.model.management.v2.HitFaultClass;
import java.util.ArrayList;
import java.util.List;
import com.keytiles.api.model.common.types.v3.ResponseContainerInfoClass;

import java.io.Serializable;

public class HitFaultReportResponse extends ContainerQueryRangeResponseClass implements Serializable{
  private static final long serialVersionUID = 1L;


  // @Generator: non-nullable property so Codegen applied a default empty array to it automatically because it is possible with this type 
  // @Generator: becomes private - as non-nullable so we need to protect it with setter and null-check 
  private List<HitFaultClass> faults = new ArrayList<>();


  
  @JsonCreator
  public HitFaultReportResponse(@JsonProperty("requestReceivedAt") Integer requestReceivedAt, @JsonProperty("container") ResponseContainerInfoClass container, @JsonProperty("requestedFromTimestamp") Integer requestedFromTimestamp, @JsonProperty("requestedToTimestamp") Integer requestedToTimestamp, @JsonProperty("dataFromTimestamp") Integer dataFromTimestamp, @JsonProperty("dataToTimestamp") Integer dataToTimestamp) {
    super(requestReceivedAt, container, requestedFromTimestamp, requestedToTimestamp, dataFromTimestamp, dataToTimestamp);
  }
  
  
 
  @JsonProperty("faults")
  public List<HitFaultClass> getFaults() {
    return faults;
  }  

  // @Generator: added to protect field 'faults' against null-value assignment 
  @JsonProperty("faults")
  public void setFaults(List<HitFaultClass> faults) {
    if(faults == null) {
      throw new IllegalArgumentException("'faults' value can not be NULL");
    }
    this.faults = faults;
  }



  // @Generator: builder style helper method to add values to not-readonly array field
  public HitFaultReportResponse addFaultsItem(HitFaultClass faultsItem) {
    if (this.faults == null) {
 		this.faults = new ArrayList<>();
    }
    this.faults.add(faultsItem);
    return this;
  }

  // @Generator: builder style helper method to remove values from not-readonly array field
  public HitFaultReportResponse removeFaultsItem(HitFaultClass faultsItem) {
    if (this.faults != null) {
    	this.faults.remove(faultsItem);
    }
    return this;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HitFaultReportResponse hitFaultReportResponse = (HitFaultReportResponse) o;
    return Objects.equals(this.faults, hitFaultReportResponse.faults) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(faults, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HitFaultReportResponse {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    faults: ").append(toIndentedString(faults)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
