/*
 * Keytiles Management API
 * API to manage users, permissions, containers, etc.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.keytiles.api.model.management.v2;

import java.util.Objects;
import java.util.Arrays;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.keytiles.api.model.management.v2.UserContainerRoleClass;
import com.keytiles.api.model.management.v2.UserContainerRoleClassV2;
import java.util.ArrayList;
import java.util.List;

import java.io.Serializable;

public class UserContainerLink implements Serializable{
  private static final long serialVersionUID = 1L;


  // @Generator: becomes private - as non-nullable so we need to protect it with setter and null-check 
  private String containerId = null;

  // @Generator: non-nullable property so Codegen applied a default empty array to it automatically because it is possible with this type 
  // @Generator: becomes private - as non-nullable so we need to protect it with setter and null-check 
  private List<UserContainerRoleClassV2> roles = new ArrayList<>();


  // @Generator: field refers to 'UserContainerRoleClass' which is 'nullable=true' so this is inherited into this field 
  // @Generator: becomes public - as nullable (no need to null-check) and not readonly 
  @JsonProperty("role")
  public UserContainerRoleClass role = null;

  
  @JsonCreator
  public UserContainerLink(@JsonProperty("containerId") String containerId, @JsonProperty("roles") List<UserContainerRoleClassV2> roles) {
    super();
    if(containerId == null) {
      throw new IllegalArgumentException("'containerId' value can not be NULL");
    }
    if(roles == null) {
      throw new IllegalArgumentException("'roles' value can not be NULL");
    }
    this.containerId = containerId;
    this.roles = roles;
  }
  
  
 
  @JsonProperty("containerId")
  public String getContainerId() {
    return containerId;
  }  

  // @Generator: added to protect field 'containerId' against null-value assignment 
  @JsonProperty("containerId")
  public void setContainerId(String containerId) {
    if(containerId == null) {
      throw new IllegalArgumentException("'containerId' value can not be NULL");
    }
    this.containerId = containerId;
  }

  @JsonProperty("roles")
  public List<UserContainerRoleClassV2> getRoles() {
    return roles;
  }  

  // @Generator: added to protect field 'roles' against null-value assignment 
  @JsonProperty("roles")
  public void setRoles(List<UserContainerRoleClassV2> roles) {
    if(roles == null) {
      throw new IllegalArgumentException("'roles' value can not be NULL");
    }
    this.roles = roles;
  }



  // @Generator: builder style helper method to add values to not-readonly array field
  public UserContainerLink addRolesItem(UserContainerRoleClassV2 rolesItem) {
    if (this.roles == null) {
 		this.roles = new ArrayList<>();
    }
    this.roles.add(rolesItem);
    return this;
  }

  // @Generator: builder style helper method to remove values from not-readonly array field
  public UserContainerLink removeRolesItem(UserContainerRoleClassV2 rolesItem) {
    if (this.roles != null) {
    	this.roles.remove(rolesItem);
    }
    return this;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserContainerLink userContainerLink = (UserContainerLink) o;
    return Objects.equals(this.containerId, userContainerLink.containerId) &&
        Objects.equals(this.role, userContainerLink.role) &&
        Objects.equals(this.roles, userContainerLink.roles);
  }

  @Override
  public int hashCode() {
    return Objects.hash(containerId, role, roles);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserContainerLink {\n");
    
    sb.append("    containerId: ").append(toIndentedString(containerId)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
