/*
 * Common object definitions - regarding scheduled actions.
 * These object definitions are shared among multiple contracts. Suitable to describe anything which runs on a scheduled basis - in a very intuitive, human-friendly way. (Unlike chrontab format... :-P)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.keytiles.api.model.common.schedule.v1;

import java.util.Objects;
import java.util.Arrays;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

import java.io.Serializable;

public class MonthlyScheduleSetup implements Serializable, OneOfOneOfScheduleSetups {
  private static final long serialVersionUID = 1L;


  // @Generator: becomes private - as non-nullable so we need to protect it with setter and null-check 
  private String triggerTime = null;

  // @Generator: becomes private - as non-nullable so we need to protect it with setter and null-check 
  private OneOfMonthlyScheduleSetupDayName dayName = null;


  
  // @Generator: arg 'triggerTime': mandatory field 
  // @Generator: arg 'dayName': non-nullable and does not have default value - we must enforce a non-null initial value 
  @JsonCreator
  public MonthlyScheduleSetup(@JsonProperty("triggerTime") String triggerTime, @JsonProperty("dayName") OneOfMonthlyScheduleSetupDayName dayName) {
    super();
    if(triggerTime == null) {
      throw new IllegalArgumentException("'triggerTime' value can not be NULL");
    }
    if(dayName == null) {
      throw new IllegalArgumentException("'dayName' value can not be NULL");
    }
    this.triggerTime = triggerTime;
    this.dayName = dayName;
  }
  
  
 
  @JsonProperty("triggerTime")
  public String getTriggerTime() {
    return triggerTime;
  }  

  // @Generator: added to protect field 'triggerTime' against null-value assignment 
  @JsonProperty("triggerTime")
  public void setTriggerTime(String triggerTime) {
    if(triggerTime == null) {
      throw new IllegalArgumentException("'triggerTime' value can not be NULL");
    }
    this.triggerTime = triggerTime;
  }

  @JsonProperty("dayName")
  public OneOfMonthlyScheduleSetupDayName getDayName() {
    return dayName;
  }  

  // @Generator: added to protect field 'dayName' against null-value assignment 
  @JsonProperty("dayName")
  public void setDayName(OneOfMonthlyScheduleSetupDayName dayName) {
    if(dayName == null) {
      throw new IllegalArgumentException("'dayName' value can not be NULL");
    }
    this.dayName = dayName;
  }



  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MonthlyScheduleSetup monthlyScheduleSetup = (MonthlyScheduleSetup) o;
    return Objects.equals(this.triggerTime, monthlyScheduleSetup.triggerTime) &&
        Objects.equals(this.dayName, monthlyScheduleSetup.dayName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(triggerTime, dayName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MonthlyScheduleSetup {\n");
    
    sb.append("    triggerTime: ").append(toIndentedString(triggerTime)).append("\n");
    sb.append("    dayName: ").append(toIndentedString(dayName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
