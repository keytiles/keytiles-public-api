/*
 * Keytiles Reporting API
 * API endpoints to manage / query / use Keytiles Reporting. 
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.keytiles.api.model.reports.v1;

import java.util.Objects;
import java.util.Arrays;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

import java.io.Serializable;

public class Schedule implements Serializable{
  private static final long serialVersionUID = 1L;


  // @Generator: becomes private - as non-nullable so we need to protect it with setter and null-check 
  /**
   * Describes which type of schedule is this?
   *
   */
  public enum TypeEnum {
    HOURLY("hourly"),
    DAILY("daily"),
    WEEKLY("weekly"),
    MONTHLY("monthly");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TypeEnum fromValue(String input) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  private TypeEnum type = null;

  // @Generator: becomes private - as non-nullable so we need to protect it with setter and null-check 
  private OneOfScheduleSetup setup = null;

  // @Generator: becomes private - as non-nullable so we need to protect it with setter and null-check 
  private Integer tzOffset = null;

  // @Generator: becomes private - as non-nullable so we need to protect it with setter and null-check 
  private Integer majorVersion = null;


  
  // @Generator: arg 'type': mandatory field 
  // @Generator: arg 'setup': mandatory field 
  // @Generator: arg 'tzOffset': mandatory field 
  // @Generator: arg 'majorVersion': mandatory field 
  @JsonCreator
  public Schedule(@JsonProperty("type") TypeEnum type, @JsonProperty("setup") OneOfScheduleSetup setup, @JsonProperty("tzOffset") Integer tzOffset, @JsonProperty("majorVersion") Integer majorVersion) {
    super();
    if(type == null) {
      throw new IllegalArgumentException("'type' value can not be NULL");
    }
    if(setup == null) {
      throw new IllegalArgumentException("'setup' value can not be NULL");
    }
    if(tzOffset == null) {
      throw new IllegalArgumentException("'tzOffset' value can not be NULL");
    }
    if(majorVersion == null) {
      throw new IllegalArgumentException("'majorVersion' value can not be NULL");
    }
    this.type = type;
    this.setup = setup;
    this.tzOffset = tzOffset;
    this.majorVersion = majorVersion;
  }
  
  
 
  @JsonProperty("type")
  public TypeEnum getType() {
    return type;
  }  

  // @Generator: added to protect field 'type' against null-value assignment 
  @JsonProperty("type")
  public void setType(TypeEnum type) {
    if(type == null) {
      throw new IllegalArgumentException("'type' value can not be NULL");
    }
    this.type = type;
  }

  @JsonProperty("setup")
  public OneOfScheduleSetup getSetup() {
    return setup;
  }  

  // @Generator: added to protect field 'setup' against null-value assignment 
  @JsonProperty("setup")
  public void setSetup(OneOfScheduleSetup setup) {
    if(setup == null) {
      throw new IllegalArgumentException("'setup' value can not be NULL");
    }
    this.setup = setup;
  }

  @JsonProperty("tzOffset")
  public Integer getTzOffset() {
    return tzOffset;
  }  

  // @Generator: added to protect field 'tzOffset' against null-value assignment 
  @JsonProperty("tzOffset")
  public void setTzOffset(Integer tzOffset) {
    if(tzOffset == null) {
      throw new IllegalArgumentException("'tzOffset' value can not be NULL");
    }
    this.tzOffset = tzOffset;
  }

  @JsonProperty("majorVersion")
  public Integer getMajorVersion() {
    return majorVersion;
  }  

  // @Generator: added to protect field 'majorVersion' against null-value assignment 
  @JsonProperty("majorVersion")
  public void setMajorVersion(Integer majorVersion) {
    if(majorVersion == null) {
      throw new IllegalArgumentException("'majorVersion' value can not be NULL");
    }
    this.majorVersion = majorVersion;
  }



  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Schedule schedule = (Schedule) o;
    return Objects.equals(this.type, schedule.type) &&
        Objects.equals(this.setup, schedule.setup) &&
        Objects.equals(this.tzOffset, schedule.tzOffset) &&
        Objects.equals(this.majorVersion, schedule.majorVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, setup, tzOffset, majorVersion);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Schedule {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    setup: ").append(toIndentedString(setup)).append("\n");
    sb.append("    tzOffset: ").append(toIndentedString(tzOffset)).append("\n");
    sb.append("    majorVersion: ").append(toIndentedString(majorVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
