/*
 * Keytiles Reporting API
 * API endpoints to manage / query / use Keytiles Reporting. 
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.keytiles.api.model.reports.v1;

import java.util.Objects;
import java.util.Arrays;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.keytiles.api.model.common.types.v3.ContainerResponseV3Class;
import com.keytiles.api.model.common.types.v3.ResponseContainerInfoV3Class;
import com.keytiles.api.model.reports.v1.AvailableReportInstance;
import java.util.ArrayList;
import java.util.List;

import java.io.Serializable;

public class ListContainerReportInstancesResponseClass extends ContainerResponseV3Class implements Serializable{
  private static final long serialVersionUID = 1L;


  // @Generator: becomes private - as non-nullable so we need to protect it with setter and null-check 
  private String ofReportSetupId = null;

  // @Generator: non-nullable property so Codegen applied a default empty array to it automatically because it is possible with this type 
  // @Generator: becomes private - as non-nullable so we need to protect it with setter and null-check 
  private List<AvailableReportInstance> availableInstances = new ArrayList<>();


  
  // @Generator: arg 'ofReportSetupId': non-nullable and does not have default value - we must enforce a non-null initial value 
  @JsonCreator
  public ListContainerReportInstancesResponseClass(@JsonProperty("requestReceivedAt") Integer requestReceivedAt, @JsonProperty("container") ResponseContainerInfoV3Class container, @JsonProperty("ofReportSetupId") String ofReportSetupId) {
    super(requestReceivedAt, container);
    if(ofReportSetupId == null) {
      throw new IllegalArgumentException("'ofReportSetupId' value can not be NULL");
    }
    this.ofReportSetupId = ofReportSetupId;
  }
  
  
 
  @JsonProperty("ofReportSetupId")
  public String getOfReportSetupId() {
    return ofReportSetupId;
  }  

  // @Generator: added to protect field 'ofReportSetupId' against null-value assignment 
  @JsonProperty("ofReportSetupId")
  public void setOfReportSetupId(String ofReportSetupId) {
    if(ofReportSetupId == null) {
      throw new IllegalArgumentException("'ofReportSetupId' value can not be NULL");
    }
    this.ofReportSetupId = ofReportSetupId;
  }

  @JsonProperty("availableInstances")
  public List<AvailableReportInstance> getAvailableInstances() {
    return availableInstances;
  }  

  // @Generator: added to protect field 'availableInstances' against null-value assignment 
  @JsonProperty("availableInstances")
  public void setAvailableInstances(List<AvailableReportInstance> availableInstances) {
    if(availableInstances == null) {
      throw new IllegalArgumentException("'availableInstances' value can not be NULL");
    }
    this.availableInstances = availableInstances;
  }



  // @Generator: builder style helper method to add values to not-readonly array field
  public ListContainerReportInstancesResponseClass addAvailableInstancesItem(AvailableReportInstance availableInstancesItem) {
    if (this.availableInstances == null) {
 		this.availableInstances = new ArrayList<>();
    }
    this.availableInstances.add(availableInstancesItem);
    return this;
  }

  // @Generator: builder style helper method to remove values from not-readonly array field
  public ListContainerReportInstancesResponseClass removeAvailableInstancesItem(AvailableReportInstance availableInstancesItem) {
    if (this.availableInstances != null) {
    	this.availableInstances.remove(availableInstancesItem);
    }
    return this;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListContainerReportInstancesResponseClass listContainerReportInstancesResponseClass = (ListContainerReportInstancesResponseClass) o;
    return Objects.equals(this.ofReportSetupId, listContainerReportInstancesResponseClass.ofReportSetupId) &&
        Objects.equals(this.availableInstances, listContainerReportInstancesResponseClass.availableInstances) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ofReportSetupId, availableInstances, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListContainerReportInstancesResponseClass {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    ofReportSetupId: ").append(toIndentedString(ofReportSetupId)).append("\n");
    sb.append("    availableInstances: ").append(toIndentedString(availableInstances)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
