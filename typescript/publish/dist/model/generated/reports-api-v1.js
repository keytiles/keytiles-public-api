/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Keytiles Reporting API
 * API endpoints to manage / query / use Keytiles Reporting.

 * OpenAPI spec version: 1.0
 */
import axios from 'axios';
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ReportsEndpointLocalErrorCodes = {
    containerId_missing: 'containerId_missing',
    containerId_invalid: 'containerId_invalid',
    reportSetupId_invalid: 'reportSetupId_invalid',
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ReportRecipientsRoles = {
    view: 'view',
    admin: 'admin',
    developer: 'developer',
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ReportQueryPlugin = {
    eventCountPlugin: 'eventCountPlugin',
    campaignPerformancePlugin: 'campaignPerformancePlugin',
    socialPerformancePlugin: 'socialPerformancePlugin',
    linksPerformancePlugin: 'linksPerformancePlugin',
    tagsPerformancePlugin: 'tagsPerformancePlugin',
    visitorBehaviorPlugin: 'visitorBehaviorPlugin',
};
/**
 * With this endpoint you have the possibility to query all report setups of a Data Container.

 * @summary To query existing report setups belong to the Container
 */
export const getV1ReportsContainersSetupRestContainerId = (containerId, options) => {
    return axios.get(`/v1/reports/containers/setup/rest/${containerId}`, options);
};
/**
 * You can assign an ID for this setup on client side as well but if you don't then a new ID will be generated (and returned in response header).
  
For now only Admins of Data Containers can create a report setup.

 * @summary To create a new report setup belongs to the Container
 */
export const postV1ReportsContainersSetupRestContainerId = (containerId, reportSetup, options) => {
    return axios.post(`/v1/reports/containers/setup/rest/${containerId}`, reportSetup, options);
};
/**
 * @summary To query a specific report setup of the Container
 */
export const getV1ReportsContainersSetupRestContainerIdReportSetupId = (containerId, reportSetupId, options) => {
    return axios.get(`/v1/reports/containers/setup/rest/${containerId}/${reportSetupId}`, options);
};
/**
 * The 'resourceVersion' field is very important here - it must match with the version the server currently has otherwise you will get a 409 error. This mechanism helps to detect possible race conditions.
  
For now only Admins of Data Containers can modify a report setup.

 * @summary To modify an existing report setup.
 */
export const putV1ReportsContainersSetupRestContainerIdReportSetupId = (containerId, reportSetupId, reportSetup, options) => {
    return axios.put(`/v1/reports/containers/setup/rest/${containerId}/${reportSetupId}`, reportSetup, options);
};
/**
 * In case you do not want to lose all previous instances consider simply just remove the 'schedule' of the report instead of deleting it! If you do so then the report will not run automatically anymore.
  
For now only Admins of Data Containers can delete a report setup.

 * @summary To delete a specific report setup of the Container as well as all previously generated report instances.
 */
export const deleteV1ReportsContainersSetupRestContainerIdReportSetupId = (containerId, reportSetupId, options) => {
    return axios.delete(`/v1/reports/containers/setup/rest/${containerId}/${reportSetupId}`, options);
};
/**
 * @summary To query (list) all availale report instance IDs of a given ReportSetup - available in the Data Container
 */
export const getV1ReportsContainersSetupRestContainerIdReportSetupIdInstances = (containerId, reportSetupId, options) => {
    return axios.get(`/v1/reports/containers/setup/rest/${containerId}/${reportSetupId}/instances`, options);
};
/**
 * When triggered manually then the report generation starts immediately. You can fine tune the report generation (mostly for testing purposes) - see request body!
Please note that a report generation might take time.

 * @summary To generate (create) a new report instance of this report setup.
 */
export const postV1ReportsContainersSetupRestContainerIdReportSetupIdInstances = (containerId, reportSetupId, generateReportRequestClass, options) => {
    return axios.post(`/v1/reports/containers/setup/rest/${containerId}/${reportSetupId}/instances`, generateReportRequestClass, options);
};
/**
 * @summary To query a specific report instance with the given ID of the Data Container
 */
export const getV1ReportsContainersInstanceRestContainerIdReportInstanceId = (containerId, reportInstanceId, options) => {
    return axios.get(`/v1/reports/containers/instance/rest/${containerId}/${reportInstanceId}`, options);
};
/**
 * @summary To permanently delete a specific report instance - after this this report is not available anymore.
 */
export const deleteV1ReportsContainersInstanceRestContainerIdReportInstanceId = (containerId, reportInstanceId, options) => {
    return axios.delete(`/v1/reports/containers/instance/rest/${containerId}/${reportInstanceId}`, options);
};
//# sourceMappingURL=reports-api-v1.js.map