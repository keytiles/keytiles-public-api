openapi: 3.0.0

info:
  version: '1.0'
  title: Keytiles Reporting API
  description: >
              API endpoints to manage / query / use Keytiles Reporting.

servers:
- url: https://api.keytiles.com/api
  description: PROD server
- url: https://api-test.keytiles.com/api
  description: TEST server
   
tags:
- name: Manage report setups
  description: Endpoints to create / modify / delete / change report setups.

paths:

  '/v1/reports/containers/setup/rest/{containerId}':
  
    get:
      summary: "To query existing report setups belong to the Container"
      tags:
      - Manage report setups
      description: >
                With this endpoint you have the possibility to query all report setups of a Data Container.
      parameters:
        - $ref: 'common-types-v2.yaml#/components/parameters/containerId'

      security:
      - basicAuth: []

      responses:
        '200':
          description: "You receive the list of all setups."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetContainerReportSetupsResponseClass'
        '401':
          description: "Authentication failed - you provided invalid credentials or not at all"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineReadableReportsEndpointMessageResponseClass'
        '403':
          description: "You do not have permission to do this with the given credentials"
          content:
            application/json:
              schema:
                #$ref: 'common-types-v2.yaml#/components/schemas/MessageResponseClass'
                $ref: '#/components/schemas/MachineReadableReportsEndpointMessageResponseClass'
        '404':
          description: "The container does not exist (or disabled)"
          content:
            application/json:
              schema:
                #$ref: 'common-types-v2.yaml#/components/schemas/MessageResponseClass'
                $ref: '#/components/schemas/MachineReadableReportsEndpointMessageResponseClass'

    post:
      summary: "To create a new report setup belongs to the Container"
      description: >
                You can assign an ID for this setup on client side as well but if you don't then a new ID will be generated (and returned in response header).  
                  
                For now only Admins of Data Containers can create a report setup.
      tags:
      - Manage report setups
      parameters:
        - $ref: 'common-types-v2.yaml#/components/parameters/containerId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportSetup'

      security:
      - basicAuth: []

      responses:
        '201':
          description: The report setup resouce is created. The ID of this new report setup is returned in response header.
          headers:
             'X-ReportSetupId':
              schema:
                type: string
              description: The ID of the new report setup
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/MachineReadableReportsEndpointMessageResponseClass'
        '400':
          description: "There were problems with the request or the resource you sent on this request - more details you get in the response."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineReadableReportsEndpointMessageResponseClass'
        '401':
          description: "Authentication failed - you provided invalid credentials or not at all"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineReadableReportsEndpointMessageResponseClass'
        '403':
          description: "You do not have permission to do this with the given credentials"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineReadableReportsEndpointMessageResponseClass'
        '404':
          description: "The container does not exist (or disabled)"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineReadableReportsEndpointMessageResponseClass'
        '409':
          description: "Some preconditions are not OK. For example, you assigned an ID on client side but that ID is already taken. More details you find in the response."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineReadableReportsEndpointMessageResponseClass'
    

  '/v1/reports/containers/setup/rest/{containerId}/{reportSetupId}':
  
    get:
      summary: "To query a specific report setup of the Container"
      tags:
      - Manage report setups
      parameters:
        - $ref: 'common-types-v2.yaml#/components/parameters/containerId'
        - $ref: '#/components/parameters/reportSetupId'

      security:
      - basicAuth: []

      responses:
        '200':
          description: "The report setup was found and returned to you."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportSetup'
        '401':
          description: "Authentication failed - you provided invalid credentials"
          content:
            application/json:
              schema:
                #$ref: 'common-types-v2.yaml#/components/schemas/MessageResponseClass'
                $ref: '#/components/schemas/MachineReadableReportsEndpointMessageResponseClass'
        '403':
          description: "You do not have permission to do this with the given credentials"
          content:
            application/json:
              schema:
                #$ref: 'common-types-v2.yaml#/components/schemas/MessageResponseClass'
                $ref: '#/components/schemas/MachineReadableReportsEndpointMessageResponseClass'
        '404':
          description: "The container does not exist (or disabled) or the requested report setup does not exist - more details in the response!"
          content:
            application/json:
              schema:
                #$ref: 'common-types-v2.yaml#/components/schemas/MessageResponseClass'
                $ref: '#/components/schemas/MachineReadableReportsEndpointMessageResponseClass'

    put:
      summary: "To modify an existing report setup."
      description: >
                The 'resourceVersion' field is very important here - it must match with the version the server currently has otherwise you will get a 409 error. This mechanism helps to detect possible race conditions.  
                  
                For now only Admins of Data Containers can modify a report setup.
      tags:
      - Manage report setups
      parameters:
        - $ref: 'common-types-v2.yaml#/components/parameters/containerId'
        - $ref: '#/components/parameters/reportSetupId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportSetup'

      security:
      - basicAuth: []

      responses:
        '200':
          description: The report setup was modified successfully. This means that the 'resourceVersion' was incremented by one on server side (also update in your local copy!).
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/MachineReadableReportsEndpointMessageResponseClass'
        '400':
          description: "There were problems with the request or the resource you sent on this request - more details you get in the response."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineReadableReportsEndpointMessageResponseClass'
        '401':
          description: "Authentication failed - you provided invalid credentials or not at all"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineReadableReportsEndpointMessageResponseClass'
        '403':
          description: "You do not have permission to do this with the given credentials"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineReadableReportsEndpointMessageResponseClass'
        '404':
          description: "The container does not exist (or disabled) or the requested report setup does not exist - more details in the response!"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineReadableReportsEndpointMessageResponseClass'
        '409':
          description: "Some preconditions are not OK. Most likely the 'resourceVersion' did not match because there was a race condition. More details you find in the response."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineReadableReportsEndpointMessageResponseClass'

    delete:
      summary: "To delete a specific report setup of the Container as well as all previously generated report instances."
      description: >
                In case you do not want to lose all previous instances consider simply just remove the 'schedule' of the report instead of deleting it! If you do so then the report will not run automatically anymore.  
                  
                For now only Admins of Data Containers can delete a report setup.
      tags:
      - Manage report setups
      parameters:
        - $ref: 'common-types-v2.yaml#/components/parameters/containerId'
        - $ref: '#/components/parameters/reportSetupId'

      security:
      - basicAuth: []

      responses:
        '200':
          description: "The report setup and all report instances were deleted successfully."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportSetup'
        '401':
          description: "Authentication failed - you provided invalid credentials"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineReadableReportsEndpointMessageResponseClass'
        '403':
          description: "You do not have permission to do this with the given credentials"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineReadableReportsEndpointMessageResponseClass'
        '404':
          description: "The container does not exist (or disabled) or the requested report setup does not exist - more details in the response!"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineReadableReportsEndpointMessageResponseClass'

components:

  parameters:
    reportSetupId:
      name: reportSetupId
      in: path
      required: true
      description: 'ID of the report setup belongs to a Data Container'
      schema:
        type: string
    

  schemas:

    # This enum defines error codes belong to management endpoints specifically
    # note: no support in OpenApi for now how to document values so we just add the description as comments for now.
    #       see: https://github.com/OAI/OpenAPI-Specification/issues/348 
    ReportsEndpointLocalErrorCodes:
      type: string
      enum:
      # The ID of the container was not provided - it is missing
      - containerId_missing
      # The ID of the Container is not valid - there is no Container with this ID
      - containerId_invalid
      # The ID of the ReportSetup is not valid - there is no setup with this ID
      - reportSetupId_invalid
      

    # Let's merge the "local" error codes with the "global" ones in this enum
    # Reports API endpoints can return the union of them
    ReportsEndpointErrorCodes:
      description: NOTE! Error codes is an Enum. Unfortunately in OpenApi (so far) there is no possibility to provide description for Enum values. But we have detailed description of each error codes! Please check the OpenApi file in our Github repo - you find them as comments for each Enum values! 
      allOf:
      - $ref: "#/components/schemas/ReportsEndpointLocalErrorCodes"
      - $ref: "common-types-v2.yaml#/components/schemas/CommonErrorCodes"


    # Let's extend the global Problem class with our Reports API specific error codes
    ReportsEndpointProblemClass:
      allOf:
      - $ref: 'common-types-v2.yaml#/components/schemas/ProblemBaseClass'
      - type: object
        properties:
          errorCodes:
            type: array
            items:
              $ref: "#/components/schemas/ReportsEndpointErrorCodes"
            nullable: true
            default: []

    # Let's extend the original response class with the above assembled machine readable Problems
    MachineReadableReportsEndpointMessageResponseClass:
      allOf:
      - $ref: "common-types-v2.yaml#/components/schemas/MessageResponseClass"
      - type: object
        properties:
          problems:
            type: array
            items:
              $ref: '#/components/schemas/ReportsEndpointProblemClass'
            nullable: false
            default: []
            description: 'List of errors/warnings'


    GetContainerReportSetupsResponseClass:
      allOf:
      - $ref: "common-types-v2.yaml#/components/schemas/ContainerResponseClass"
      type: object
      properties:
        reportSetupIds:
          type: array
          items:
            type: string
          nullable: false
          description: 'All avaiable report setup IDs.'


    ReportRecipientsRoles:
      type: string
      enum: [view, admin, developer]


    ReportRecipients:
      description: >
                  This is an optional setup - controlls who will receive these reports.  
                    
                  If not given at all then ALL Data Container users will get the report. Otherwise if given then Keytiles users who are matching to ANY of the given criteria will receive the report.  
      type: object
      nullable: true
      properties:
        users:
          description: > 
                      Optional entry. List of specific Keytiles users (email or ID) to send the reports to. The users who are listed here will get the reports for sure if
                       * they are not disabled in Keytiles (can not log in)
                       * they are not associated with the Data Container anyhow
          type: array
          items:
            type: string
        roles:
          description: Optional entry. All Data Container users who has ANY of the listed roles will receive this report.
          type: array
          items:
            $ref: '#/components/schemas/ReportRecipientsRoles'


    ReportQueryPlugin:
      type: string
      enum: 
      - eventCountPlugin
      - campaignPerformancePlugin
      - socialPerformancePlugin
      - linksPerformancePlugin
      - tagsPerformancePlugin


    ReportQuery:
      description: A report can contain multiple queries. This object describes one query of those.
      type: object
      required:
        - metaData
        - plugin
      properties:
        id:
          type: string
          description: The unique ID (within the report) of this query - UUID style. In concrete report instances this helps to identify the result of this query within the whole report.
        metaData:
          description: Title, description - of this query of the report.
          $ref: 'common-metadata-v1.yaml#/components/schemas/MetaData'
        plugin:
          description: Which query plugin to use for this query? Each plugin provides different possibilities.
          $ref: "#/components/schemas/ReportQueryPlugin"
        parameters:
          description: The parameters a query plugin needs depends on the plugin. These key-value pairs provide the setup how the query plugin will generate this part of the report.
          type: object
          properties:
            groupByTime:
              description: >
                          If set to TRUE then you get a break-down in time interval. The interval is driven by your schedule.  
                           * Hourly schedule: you get 15 minutes break-down
                           * Daily schedule: you get an hourly breakdown
                           * Weekly schedule: you get a daily breakdown
                           * Monthly schedule: you get a weekly breakdown
              type: boolean
            # later!
            # groupByTimePeriod:
            #   description: >
            #               You can override the default period (driven by your schedule) using this option.  
            #                 
            #               It must make sense in terms of your schedule! What does it mean? For example if you have an Hourly schedule then you can not set up "2h" period. Does not makes any sense right?
            #   type: string

            eventsIncluded:
              description: >
                          Which event counts to include into the report? E.g. "pageview", or custom events e.g. "30 seconds passed". These will be the columns in your report. You can also construct formulas using the pure eventNames.
              type: array
              items:
                type: string

            groupByTiles:
              description: >
                          If set to TRUE then you get a break-down on Tile level - otherwise just sum of the traffic of all Tiles.
              type: boolean
              default: false
            tileCountLimit:
              description: >
                          How many tiles you want to display maximum? Only makes sense if 'groupByTiles=true'. Using the 'performanceDescendingOrder' basically you can see the top performing ones, or the worst performing ones - up to you.
              type: integer
              default: 50
            performanceDescendingOrder:
              type: boolean
              default: true
            groupByTileGroupPaths:
              description: >
                          If set to TRUE then you get a break-down based on content structure (=tileGroupPath). Can not be used together with 'groupByTiles'!
              type: boolean
              default: false
            groupByTileGroupPathMaxDepth:
              description: >
                          You can limit how deep you want the report to go down in the content structure. E.g. if you set it to 1 that means you get a break down only for first level.
              type: integer

            tileTypesOnly:
              type: string
              description: >
                            Data filter option. Comma separated list of tile types you want to limit the query for. If you list more values here then they are interpreted with an OR operator.  
                              
                            IMPORTANT! You can not use this together with `tileTypeIsNot` parameter! You can only use this or that but not both.  
                              
                            In the list you can either use:
                            * The name of the type ('frontpage', 'page', 'article', ...), or
                            * The numeric ID of the tile type - returned by `/v2/stat/webhits/{containerId}/idmappings` endpoint - using the format `id:<numeric ID>`, e.g. **"id:123"**

            tileGroupPathMatchingOnly:
              type: string
              description: >
                            Data filter option. Comma separated list of matchers (see below) which returns counters only for those Tiles who's tileGroupPath is matching to one of the listed matchers.
                            So if you list more values here then they are interpreted with an OR operator.  
                              
                            note: if you have comma in your matcher (strange, but ok...) you can escape that with `\\` character!  
                              
                            You can use the **'\*'** character to match any substring. But where and how you put this Asterisk character matters! Let us show
                            you how through an example!
                            
                            Let's assume you have articles and pages (Tiles) in the following content areas:  
                              
                            * /auto
                            * /tech
                            * /tech/mobile-rumours
                            * /tech/mobile
                            * /tech/mobile/android
                            * /tech/mobile/ios
                            * /politics
                              
                            And now you execute queries with two different **tileGroupPathMatchingOnly** settings:
                            1. **"/tech/mobile\*"** and
                            1. **"/tech/mobile/\*"**
                            
                            In the first query **"/tech/mobile\*"** would match for everything begins with "/tech/mobile" string. So this would include *"/tech/mobile/android"*, *"/tech/mobile/ios"* Tiles but
                            also would include *"/tech/mobile-rumours"* Tiles. Which are clearly two different areas right?  
                              
                            But what if you want to really limit for Tiles under the *"/tech/mobile"* area?  
                              
                            Well then you can use the second query value: **"/tech/mobile/\*"**. This would include *"/tech/mobile/android"*, *"/tech/mobile/ios"* but
                            would NOT include *"/tech/mobile-rumours"* anymore - as that is not a match anymore. But we are not done yet! Please note: this
                            would also include Tiles under *"/tech/mobile/"* group itself. Because **"/\*"** means "everything which is under this group"
                            
              example: '/tech/mobile/*, */errors/*'

          additionalProperties: true


    ReportSetup:
      type: object
      required:
        - id
        - metaData
        - queries
        - resourceVersion
      properties:
        id:
          type: string
          description: The unique ID of this report setup - UUID style
        metaData:
          description: Title, description and changelog - of this report.
          $ref: 'common-metadata-v1.yaml#/components/schemas/MetaData'
        schedule:
          description: Controlls when will the report run automatically. If you do not schedule the report then the report is only generated when you manually trigger it.
          $ref: 'common-schedule-v1.yaml#/components/schemas/Schedule'
        recipients:
          description: Optionally you can fine grain which Data Container users will receive this report when generated.
          $ref: '#/components/schemas/ReportRecipients'
        queries:
          description: Queries of this report.
          type: array
          items:
            $ref: '#/components/schemas/ReportQuery'
        resourceVersion:
          type: integer
          description: This is the resource version (which is automatically incremented by every change). When you do an update (PUT) you need to send it back! The server will check if it is matching with the resource version he has. If not then that means someone else already did an update in the meantime therefore your request can not be accepted - otherwise you may overwrite the changes someone did.