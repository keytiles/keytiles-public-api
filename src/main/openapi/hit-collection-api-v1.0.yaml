openapi: 3.0.1
info:
  title: Keytiles Hit Collection API
  description: >
              **DEPRECATED!** as we have newer version. Visit https://www.keytiles.com/developer-area/keytiles-apis!  
                
              API to collect hits received by the tracked website
                
              This endpoint can be used as an integration point if you want to send in hits generated
              by your native iOS/Android/etc applications.  
                
              If you are planning to integrate your app traffic please visit the Keytiles website
              Developer area and learn more!  
                
              check [https://keytiles.com/developer-area/sending-in-traffic-from-ios-android-etc-apps](https://keytiles.com/developer-area/sending-in-traffic-from-ios-android-etc-apps)
  version: 1.0.0
  
servers:
- url: https://api.keytiles.com/api
  description: PROD server
- url: https://api-test.keytiles.com/api
  description: TEST server

paths:
  '/v1/webhits':
    post:
      summary: Send in a website hit
      requestBody:
        description: 'A filled JSON object representing the hit data/details'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhitClass'
      responses:
       '202':
          description: >
                        Keytiles system accepted the Hit data and this is enqued now for processing. There were no obvious problems (e.g. invalid
                        JSON data) with your request.  
                          
                        Of course it is still possible that eventually the Hit will be dropped (due to error) or processed but
                        will raise warnings. If this happens you will find the issue in the error reports later.  
          content:
            'application/json':
              schema:
                $ref: 'versions/common-types-v1.0.yaml#/components/schemas/MessageResponseClass'
       '400':
          description: "There are problems with the request. Further information is available in the response."
          content:
            'application/json':
              schema:
                $ref: 'versions/common-types-v1.0.yaml#/components/schemas/MessageResponseClass'

components:
  schemas:
  
    HitClass:
      type: object
      required:
      - containerId
      - method
      - value
      - tileId
      - tileTitle
      properties:
        containerId:
          type: string
          description: >
                        Mandatory field. This identifies the Container of the tracking data where this hit belongs to.
          nullable: false
        sourceTime:
          type: integer
          format: int32
          description: >
                        Current client time as UNIX timestamp in UTC (seconds since Epoch) when this hit was generated.  
                          
                        However this is not a mandatory field it is recommended to send this. The value should not point to the
                        future. If this happens then it is corrected on server side to now() and raising a warning.  
                          
                        If the value points to the past then the hit will be counted accordingly - so it is possible to back date the hit.
          example: 1543355710
          nullable: true
        hitProducer:
          type: string
          description: >
                        Optional field. Identifies the hit sender agent.  
                          
                        For example in the webhits business domain if the hit was generated by our tracking JavaScript then it is "ktTrackingJs"
          nullable: true
        method:
          type: string
          enum: [incremental, absolute]
          description: Describes how the value is used. **incremental:** means the value is added to the stored value. **absolute:** means the value is overriding the current stored value.
          nullable: false
        value:
          type: integer
          example: 1
          nullable: false
        tileId:
          type: string
          description: >
                        Mandatory field. The unique identifier of the Tile which is getting the hit.
                          
                        To understand better what this field is you should check [https://keytiles.com/developer-area/hit-attributes](https://keytiles.com/developer-area/hit-attributes#tileId-attribute)  
          nullable: false
        tileTitle:
          type: string
          description: >
                        Mandatory field. This title will be displayed on the Tile in the Keytiles UI.  
                          
                        To understand better what this field is you should check [https://keytiles.com/developer-area/hit-attributes](https://keytiles.com/developer-area/hit-attributes#tileTitle-attribute)  
          nullable: false
        tileGroupPath:
          type: string
          description: >
                        Optional field but it is strongly recommended to send this... Similar to folder paths - describes the content
                        structure the Tile belongs to.  
                          
                        To understand better what this field is you should check [https://keytiles.com/developer-area/hit-attributes](https://keytiles.com/developer-area/hit-attributes#tileGroupPath-attribute)  
          example: "/mainTileGroup/subTileGroup"
          nullable: true
          
    WebhitClass:
      allOf:
        - $ref: '#/components/schemas/HitClass'
        - type: object
          required:
          - action
          - userAgentType
          properties:
            action:
              type: string
              enum: [pageview]
              description: >
                            Mandatory field. Defines what has happened (so eventually which counter to increase)  
                              
                            Currently only 'pageview' is supported but in the near future more is coming...
                            (like 'download' or even custom actions!)
              nullable: false
            tileType:
              type: string
              enum: [frontpage, page, article]
              description: >
                            Optional field. If not given then 'article' is used.  
                              
                            Keytiles supports to categorize your tiles by type.  
                              
                            To understand better what this field is you should check [https://keytiles.com/developer-area/hit-attributes](https://keytiles.com/developer-area/hit-attributes#tileType-attribute)  
              nullable: true
            tileUrl:
              type: string
              description: >
                            URLs are just meta-data for your Tiles. (As we do know well that even the very same article can appear under many
                            different concrete URLs) A Tile can have multiple URLs however try to reduce it if possible...
                              
                            To understand better what this field is you should check [https://keytiles.com/developer-area/hit-attributes](https://keytiles.com/developer-area/hit-attributes#tileUrl-attribute)  
              nullable: true
            uniqueWebClientId:
              type: string
              description: >
                            Optional field however using this is strongly recommended - if possible! This is a unique identifier of the visitor's user agent:
                            meaning his web browser or mobile device.  
                              
                            This value is the soul of the so called "visit session" term and might heavily affect the "bouncer" values.
                              
                            **IMPORTANT NOTE:** This is a sensitive field! Keytiles will store this value so never use any data in this field
                            which is personal or sensitive data of your visitor - even if you know it
                            and using that would be the easiest solution for you!  
                              
                            Just to give you a quick idea: when the hit is collected by our tracking JavaScript then this ID is just a UUID style
                            randomly generated thing - stored in Cookie under the user's web browser for future actions. And yes, even if the visitor
                            person is the same if he is using multiple devices this ID should and must be unique / device (aka Web Client App)  
                              
                            In case you can not provide this value for whatever reason please see also *pseudoUniqueWebClientId* field!
              nullable: true
            pseudoUniqueWebClientId:
              type: string
              description: >
                            Optional field. Similar to *uniqueWebClientId* with one difference: with this field you basically say that
                            you have an ID which is "very likely" unique but you can not guarantee this (for whatever reason).  
                              
                            This might come into the picture if e.g. the user has disabled cookies in his/her web browser so we can not generate
                            a "for sure" *uniqueWebClientId*. Rather than that we still might be able to generate kind of a "fingerprint" of his/her
                            browser by taking into account some - very likely unique - values of his device.  
                              
                            **IMPORTANT NOTE:** This is a sensitive field! Keytiles might store this value so never use any data in this field
                            which is personal or sensitive data of your visitor - even if you know it
                            and using that would be the easiest solution for you!
              nullable: true
            userAgentType:
              type: string
              enum: [browser-desktop, browser-mobile, other, yourCustomValue1, yourCustomValue2, yourCustomValue3, ...]
              description: >
                            Mandatory field. Tells Keytiles the type of the web client the visitor is using.  
                              
                            This is an important information as counters are segregated by this value. There are a few "built in" values
                            as the enumeration shows. But you can also define and send in custom values (in case you have custom web clients like
                            a native iOS / Android readers or Apps and you want to track the traffic generated through them) too with the limitation
                            you need to pre-define them in your Container setup!  
                              
                            To keep Keytiles backend storage efficient we must limit the values here in both: length and also number of different
                            custom values. This is the reason why you need to pre-define them in your Container settings if you wish to use custom
                            values too... 
              nullable: false
            referrerUrl:
              type: string
              description: >
                            Optional field. The value tells Keytiles from where the visitor - which URL - came from.  
                              
                            This is playing role in being able to track external/internal referrers and visitor flow so if you have this
                            information you should send it.
              nullable: true
            referrerTileId:
              type: string
              description: >
                            Optional field. The value tells Keytiles from which Tile the visitor came from.  
                              
                            This makes sense only if the referrer is internal of course. And this one is really playing a role in building up
                            the visitor flow internally on the tracked website.  
                              
                            If this value is provided then it takes precedence over the value in the *referrerUrl* field very likely.
              nullable: true
            visitorEnvironment:
              $ref: '#/components/schemas/VisitorEnvironment'

    VisitorEnvironment:
      type: object
      nullable: true
      description: Contains information about the client machine. Everything is optional here - even this object itself.
      properties:
        resolution:
          type: string
          description: Screen resolution of the client in format "<width> x <height>" - in pixels
          example: 1920x1080
          nullable: true
        windowSize:
          type: string
          description: Size of the web client window in format "<width> x <height>" - in pixels
          example: 846x712
          nullable: true
        windowId:
          type: string
          description: >
                        Unique ID of the content window. (E.g. in WebBrowser world these are browser tabs/windows). A randomly
                        generated short ID is perfectly enough for this.  
                          
                        Keytiles can track visitor activity / content window correctly and separated - if this identifier is porvided.
                        This takes part e.g. in building the "fromTile -> toTile" visitor flow better and in some other cases.  
                          
                        If you can produce this value easily then we recommend to send this data. But if not, and you still want
                        to have correct "fromTile -> toTile" flow tracking then please consider sending *referrerTileId* (preferably)
                        or *referrerUrl*!
          nullable: true
        locale:
          type: string
          description: The localce data of the visitor's device or user agent.
          example: "en-US"
          nullable: true
        opSystem:
          type: string
          description: >
                        The name (and version) of the Operating System the visitor's web client is running on  
                          
                        **IMPORTANT NOTE:** This is a sensitive field! Keytiles might store this value so make sure you never use accidentaly
                        any data in this field which is personal or sensitive data of your visitor
          nullable: true
        webClient:
          type: string
          description: >
                        The name (and version) of the web client the visitor is using to visit the page.  
                          
                        If *userAgentType* value is "browser-desktop" or "browser-mobile" then the navigator.userAgent string - provided by
                        the Web Browser - might come in here  
                          
                        **IMPORTANT NOTE:** This is a sensitive field! Keytiles might store this value so make sure you never use accidentaly
                        any data in this field which is personal or sensitive data of your visitor  
          nullable: true
          
          
          
